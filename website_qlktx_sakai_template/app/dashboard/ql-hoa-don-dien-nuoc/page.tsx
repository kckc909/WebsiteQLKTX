// ‚úÖ 3. Qu·∫£n l√Ω h√≥a ƒë∆°n ƒëi·ªán n∆∞·ªõc
// üóÇ B·∫£ng c·ªôt g·ª£i √Ω:
// üßæ M√£ h√≥a ƒë∆°n
// üè† M√£ ph√≤ng
// üî¢ ƒêi·ªán ti√™u th·ª• (kWh)
// üî¢ N∆∞·ªõc ti√™u th·ª• (m¬≥)
// üí∏ Ti·ªÅn ƒëi·ªán
// üí∏ Ti·ªÅn n∆∞·ªõc
// üìÖ K·ª≥ (Th√°ng/NƒÉm)
// üí≥ Tr·∫°ng th√°i (ƒê√£ thu / Ch∆∞a thu)
// ‚öôÔ∏è Thao t√°c (S·ª≠a, Thu ti·ªÅn, In h√≥a ƒë∆°n)
// üî• Ch·ª©c nƒÉng ch√≠nh
// üîÑ Sinh h√≥a ƒë∆°n ƒëi·ªán n∆∞·ªõc t·ª± ƒë·ªông khi nh·∫≠p ch·ªâ s·ªë
// üí≥ X√°c nh·∫≠n thu ti·ªÅn
// üñ®Ô∏è In h√≥a ƒë∆°n
// üîç L·ªçc theo ph√≤ng, th√°ng, tr·∫°ng th√°i

'use client';

import { InputText } from "primereact/inputtext";
import { useEffect, useState, useRef } from 'react';
import { DataTable } from 'primereact/datatable';
import { Column } from 'primereact/column';
import { Dropdown } from 'primereact/dropdown';
import { Card } from 'primereact/card';
import { Toast } from 'primereact/toast';
import { Button } from 'primereact/button';
import { tb_hoa_don_dien_nuoc } from "@custom";
import FeatureTitle from "@components/function_title";
import { Toolbar } from "primereact/toolbar";

const QlHoaDonDienNuoc = () => {
    // state 
    const toast = useRef<Toast>(null);
    const trangThaiOptions = [
        { label: 'Ch∆∞a thanh to√°n', value: 0 },
        { label: 'ƒê√£ thanh to√°n', value: 1 },
    ];
    const [tongHoaDonThang, setTongHoaDonThang] = useState(0);
    const [daThanhToan, setDaThanhToan] = useState(0);
    const [chuaThanhToan, setChuaThanhToan] = useState(0);
    const [globalFilter, setGlobalFilter] = useState('');
    const [hoaDons, setHoaDons] = useState<tb_hoa_don_dien_nuoc[]>([]);
    const [filteredHoaDons, setFilteredHoaDons] = useState<tb_hoa_don_dien_nuoc[]>([]);
    const [selectedTrangThai, setSelectedTrangThai] = useState<number | null>(null);


    // effect 
    useEffect(() => {

    }, []);

    useEffect(() => {
        if (selectedTrangThai !== null) {
            setFilteredHoaDons(hoaDons.filter(hd => hd.trang_thai === selectedTrangThai));
        } else {
            setFilteredHoaDons(hoaDons);
        }
    }, [selectedTrangThai, hoaDons]);
    // functions
    const trangThaiTemplate = (rowData: tb_hoa_don_dien_nuoc) => {
        return (
            <span className={`px-2 py-1 text-sm rounded ${rowData.trang_thai === 1 ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'
                }`}>
                {rowData.trang_thai === 1 ? 'ƒê√£ thanh to√°n' : 'Ch∆∞a thanh to√°n'}
            </span>
        );
    };

    // componnent 
    const header = (
        <div className="flex flex-column md:flex-row md:justify-content-between md:align-items-center">
            <h2 className="m-0 text-2xl">Danh s√°ch ph√≤ng ·ªü</h2>
            <div className="flex flex-wrap gap-2 align-items-center justify-between">
                <Dropdown
                    value={selectedTrangThai}
                    onChange={(e) => setSelectedTrangThai(e.value)}
                    options={trangThaiOptions}
                    optionLabel="label"
                    placeholder="L·ªçc theo tr·∫°ng th√°i"
                    className="w-64"
                    showClear
                />
            </div>
            <span className="block mt-2 md:mt-0 p-input-icon-left">
                <i className="pi pi-search" />
                <InputText type="search" onInput={(e) => setGlobalFilter(e.currentTarget.value)} placeholder="Search..." />
            </span>
        </div>
    )
    const actionTemplate = (rowData: tb_hoa_don_dien_nuoc) => {
        return (
            <div className="flex gap-2">
                <Button icon="pi pi-pencil" rounded text severity="info" />
                <Button icon="pi pi-trash" rounded text severity="danger" />
            </div>
        );
    };
    return (
        <div className="p-4">
            <Toast ref={toast} />
            <FeatureTitle title="Qu·∫£n l√Ω h√≥a ƒë∆°n ƒëi·ªán n∆∞·ªõc" />
            {/* Th·ªëng k√™ */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
                <Card title="T·ªïng h√≥a ƒë∆°n th√°ng">
                    <p className="text-2xl font-bold">{tongHoaDonThang}</p>
                </Card>
                <Card title="ƒê√£ thanh to√°n">
                    <p className="text-2xl font-bold text-green-600">{daThanhToan}</p>
                </Card>
                <Card title="Ch∆∞a thanh to√°n">
                    <p className="text-2xl font-bold text-red-600">{chuaThanhToan}</p>
                </Card>
            </div>

            {/* B·∫£ng */}
            <Card>
                <Toolbar className="mb-4" left={() => (
                    <>
                        <div>
                            <Button label='L√†m m·ªõi' icon='pi pi-refresh' onClick={() => { }} className='mr-2' />
                            <Button label="Th√™m m·ªõi" icon="pi pi-plus" onClick={() => { }} className='mr-2 bg-green-400 border-0' />
                        </div>
                    </>
                )} />
                <DataTable value={filteredHoaDons} paginator rows={10} rowsPerPageOptions={[5, 10, 20]} header={header}>
                    <Column field="ma_hoa_don" header="M√£ h√≥a ƒë∆°n"></Column>
                    <Column field="ten_phong" header="Ph√≤ng"></Column>
                    <Column body={(row) => `K·ª≥ ${row.hoc_ki} - ${row.nam_hoc}`} header="K·ª≥"></Column>
                    <Column field="chi_so_dien" header="ƒêi·ªán (kWh)"></Column>
                    <Column field="chi_so_nuoc" header="N∆∞·ªõc (m¬≥)"></Column>
                    <Column field="so_tien" header="S·ªë ti·ªÅn" body={(row) => row.so_tien.toLocaleString() + ' ƒë'}></Column>
                    <Column body={trangThaiTemplate} header="Tr·∫°ng th√°i"></Column>
                    <Column field="ngay_tao" header="Ng√†y t·∫°o"></Column>
                    <Column body={actionTemplate} header="Thao t√°c"></Column>
                </DataTable>
            </Card>
        </div>
    );
}
export default QlHoaDonDienNuoc;
